{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\InWin\\\\Documents\\\\ReactApp\\\\github-finder\\\\src\\\\components\\\\users\\\\GitHubUser.component.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Spinner } from './../layout/Spinner.component';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport class GitHubUser extends Component {\n  componentDidMount() {\n    // params.login is path='/user/:login' from the Router App.js\n    // The parameter of getUser() is getting from the async username parameter\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n    const {\n      loading\n    } = this.props;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\nGitHubUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default GitHubUser;","map":{"version":3,"sources":["C:/Users/InWin/Documents/ReactApp/github-finder/src/components/users/GitHubUser.component.jsx"],"names":["React","Component","Fragment","Spinner","PropTypes","Link","GitHubUser","componentDidMount","props","getUser","match","params","login","render","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","user","loading","propTypes","bool","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACxCM,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,KAA3C;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,GAJI;AAKJC,MAAAA,IALI;AAMJN,MAAAA,KANI;AAOJO,MAAAA,QAPI;AAQJC,MAAAA,SARI;AASJC,MAAAA,SATI;AAUJC,MAAAA,YAVI;AAWJC,MAAAA,YAXI;AAYJC,MAAAA;AAZI,QAaF,KAAKhB,KAAL,CAAWiB,IAbf;AAeA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKlB,KAAzB;AACA,QAAIkB,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEb,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AArCuC;AAA7BpB,U,CAOJqB,S,GAAY;AACjBD,EAAAA,OAAO,EAAEtB,SAAS,CAACwB,IADF;AAEjBH,EAAAA,IAAI,EAAErB,SAAS,CAACyB,MAAV,CAAiBC,UAFN;AAGjBrB,EAAAA,OAAO,EAAEL,SAAS,CAAC2B,IAAV,CAAeD;AAHP,C;AAiCrB,eAAexB,UAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Spinner } from './../layout/Spinner.component';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class GitHubUser extends Component {\r\n  componentDidMount() {\r\n    // params.login is path='/user/:login' from the Router App.js\r\n    // The parameter of getUser() is getting from the async username parameter\r\n    this.props.getUser(this.props.match.params.login);\r\n  }\r\n\r\n  static propTypes = {\r\n    loading: PropTypes.bool,\r\n    user: PropTypes.object.isRequired,\r\n    getUser: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      avatar_url,\r\n      location,\r\n      bio,\r\n      blog,\r\n      login,\r\n      html_url,\r\n      followers,\r\n      following,\r\n      public_repos,\r\n      public_gists,\r\n      hireable\r\n    } = this.props.user;\r\n\r\n    const { loading } = this.props;\r\n    if (loading) return <Spinner />;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Link to='/' className='btn btn-light' />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GitHubUser;\r\n"]},"metadata":{},"sourceType":"module"}