{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\InWin\\\\Documents\\\\ReactApp\\\\github-finder\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { NavBar } from './components/layout/Navbar.component';\nimport { UserList } from './components/users/UserList.component';\nimport { GitHubUser } from './components/users/GitHubUser.component';\nimport { Search } from './components/users/Search.component';\nimport { Alert } from './components/layout/Alert.component';\nimport { About } from './components/pages/about.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      repos: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async txt => {\n      this.setState({\n        loading: true\n      });\n      const res = await fetch(`https://api.github.com/search/users?q=${txt}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      const data = await res.json();\n      this.setState({\n        users: data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await fetch(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      const data = await res.json();\n      this.setState({\n        user: data,\n        loading: false\n      });\n      console.log(data);\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await fetch(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      const data = await res.json();\n      this.setState({\n        repos: data,\n        loading: false\n      });\n      console.log(data);\n    };\n\n    this.clearUsers = e => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      }); //setTimeout(() => this.setState({ alert: null }), 5000);\n    };\n\n    this.clearAlert = () => {\n      this.setState({\n        alert: null\n      });\n    };\n  }\n\n  render() {\n    const {\n      users,\n      user,\n      loading\n    } = this.state;\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        clearAlert: this.clearAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(UserList, {\n        loading: loading,\n        github: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => React.createElement(GitHubUser, Object.assign({}, props, {\n        getUser: this.getUser,\n        user: user,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/InWin/Documents/ReactApp/github-finder/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Switch","Route","NavBar","UserList","GitHubUser","Search","Alert","About","App","state","users","user","repos","loading","alert","searchUsers","txt","setState","res","fetch","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","json","items","getUser","username","console","log","getUserRepos","clearUsers","e","setAlert","msg","type","clearAlert","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { NavBar } from './components/layout/Navbar.component';\nimport { UserList } from './components/users/UserList.component';\nimport { GitHubUser } from './components/users/GitHubUser.component';\nimport { Search } from './components/users/Search.component';\nimport { Alert } from './components/layout/Alert.component';\nimport { About } from './components/pages/about.component';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n    alert: null\n  };\n\n  // Search GitHub Users\n  searchUsers = async txt => {\n    this.setState({ loading: true });\n\n    const res = await fetch(\n      `https://api.github.com/search/users?q=${txt}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    const data = await res.json();\n    this.setState({ users: data.items, loading: false });\n  };\n\n  // Get single GitHub User\n  getUser = async username => {\n    this.setState({ loading: true });\n\n    const res = await fetch(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    const data = await res.json();\n    this.setState({ user: data, loading: false });\n    console.log(data);\n  };\n\n  // Get users repos\n  getUserRepos = async username => {\n    this.setState({ loading: true });\n\n    const res = await fetch(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    const data = await res.json();\n    this.setState({ repos: data, loading: false });\n    console.log(data);\n  };\n\n  clearUsers = e => {\n    this.setState({ users: [], loading: false });\n  };\n\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg: msg, type: type } });\n\n    //setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n  clearAlert = () => {\n    this.setState({ alert: null });\n  };\n\n  render() {\n    const { users, user, loading } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <NavBar />\n          <div className='container'>\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchUsers={this.searchUsers}\n                      clearUsers={this.clearUsers}\n                      showClear={users.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                      clearAlert={this.clearAlert}\n                    />\n                    <UserList loading={loading} github={this.state.users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path='/user/:login'\n                render={props => (\n                  <GitHubUser\n                    {...props}\n                    getUser={this.getUser}\n                    user={user}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}