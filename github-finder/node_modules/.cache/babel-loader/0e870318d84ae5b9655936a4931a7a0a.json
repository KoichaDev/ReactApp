{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\InWin\\\\Documents\\\\ReactApp\\\\github-finder\\\\src\\\\components\\\\users\\\\GitHubUser.component.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Spinner } from './../layout/Spinner.component';\nimport { Repos } from './../repos/Repos.component';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport class GitHubUser extends Component {\n  componentDidMount() {\n    // params.login is path='/user/:login' from the Router App.js\n    // The parameter of getUser() is getting from the async username parameter\n    this.props.getUser(this.props.match.params.login);\n    this.props.getUserRepos(this.props.match.params.login);\n  }\n\n  render() {\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      company,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n    const {\n      loading,\n      repos\n    } = this.props;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Back to Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar_url,\n      className: \"round-img\",\n      alt: \"\",\n      style: {\n        width: '150px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Location: \", location)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, bio && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, bio)), React.createElement(\"a\", {\n      href: html_url,\n      className: \"btn btn-dark my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Visit Github profile\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, login && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Username: \"), login)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, company && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Company: \"), company)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, blog && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Website: \"), blog))))), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Followers: \", followers), React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Following: \", following), React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n      className: \"badge badge-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Public Gist: \", public_gists)), React.createElement(Repos, {\n      repos: repos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}\nGitHubUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default GitHubUser;","map":{"version":3,"sources":["C:/Users/InWin/Documents/ReactApp/github-finder/src/components/users/GitHubUser.component.jsx"],"names":["React","Component","Fragment","Spinner","Repos","PropTypes","Link","GitHubUser","componentDidMount","props","getUser","match","params","login","getUserRepos","render","name","avatar_url","location","bio","blog","company","html_url","followers","following","public_repos","public_gists","hireable","user","loading","repos","width","propTypes","bool","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Spinner } from './../layout/Spinner.component';\r\nimport { Repos } from './../repos/Repos.component';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class GitHubUser extends Component {\r\n  componentDidMount() {\r\n    // params.login is path='/user/:login' from the Router App.js\r\n    // The parameter of getUser() is getting from the async username parameter\r\n    this.props.getUser(this.props.match.params.login);\r\n    this.props.getUserRepos(this.props.match.params.login);\r\n  }\r\n\r\n  static propTypes = {\r\n    loading: PropTypes.bool,\r\n    user: PropTypes.object.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    getUserRepos: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      avatar_url,\r\n      location,\r\n      bio,\r\n      blog,\r\n      login,\r\n      company,\r\n      html_url,\r\n      followers,\r\n      following,\r\n      public_repos,\r\n      public_gists,\r\n      hireable\r\n    } = this.props.user;\r\n\r\n    const { loading, repos } = this.props;\r\n    if (loading) return <Spinner />;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Link to='/' className='btn btn-light'>\r\n          Back to Search\r\n        </Link>\r\n        Hireable:{' '}\r\n        {hireable ? (\r\n          <i className='fas fa-check text-success' />\r\n        ) : (\r\n          <i className='fas fa-times-circle text-danger' />\r\n        )}\r\n        <div className='card grid-2'>\r\n          <div className='all-center'>\r\n            <img\r\n              src={avatar_url}\r\n              className='round-img'\r\n              alt=''\r\n              style={{ width: '150px' }}\r\n            />\r\n            <h1>{name}</h1>\r\n            <p>Location: {location}</p>\r\n          </div>\r\n          <div>\r\n            {bio && (\r\n              <Fragment>\r\n                <h3>Bio</h3>\r\n                <p>{bio}</p>\r\n              </Fragment>\r\n            )}\r\n            <a href={html_url} className='btn btn-dark my-1'>\r\n              Visit Github profile\r\n            </a>\r\n            <ul>\r\n              <li>\r\n                {login && (\r\n                  <Fragment>\r\n                    <strong>Username: </strong>\r\n                    {login}\r\n                  </Fragment>\r\n                )}\r\n              </li>\r\n              <li>\r\n                {company && (\r\n                  <Fragment>\r\n                    <strong>Company: </strong>\r\n                    {company}\r\n                  </Fragment>\r\n                )}\r\n              </li>\r\n              <li>\r\n                {blog && (\r\n                  <Fragment>\r\n                    <strong>Website: </strong>\r\n                    {blog}\r\n                  </Fragment>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='card text-center'>\r\n          <div className='badge badge-primary'>Followers: {followers}</div>\r\n          <div className='badge badge-success'>Following: {following}</div>\r\n          <div className='badge badge-light'>Public Repos: {public_repos}</div>\r\n          <div className='badge badge-dark'>Public Gist: {public_gists}</div>\r\n        </div>\r\n        <Repos repos={repos} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GitHubUser;\r\n"]},"metadata":{},"sourceType":"module"}